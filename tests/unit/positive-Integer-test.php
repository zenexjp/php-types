<?php
declare(strict_types=1);

namespace zen\tests;


use PHPUnit\Framework\TestCase;
use zen\types\PositiveInteger;
use \InvalidArgumentException;

class PositiveIntegerTest extends TestCase
{

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_should_not_initialize_when_no_param_is_provided()
    {
        $this->expectException(\Error::class);
        $this->expectExceptionCode(0);
        $this->expectExceptionMessage('Too few arguments to function ');
        $this->expectExceptionMessageRegExp('/Too few arguments to function .*PositiveInteger::__construct\(\), 0 passed in .*positive\-Integer\-test\.php on line \d+ and exactly 1 expected/');
        $positiveInt = new PositiveInteger();
    }

    public function test_zero_is_not_acceptable_as_positive_integer()
    {
        $testInput = 0;
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionCode(1001);
        $this->expectExceptionMessage("Given value '$testInput' is zero and can not be accepted as a positive integer");
        $positiveInt = new PositiveInteger($testInput);
    }

    public function test_must_not_accept_negative_integer()
    {
        $testInput = -5630;
        $this->expectException(InvalidArgumentException::class);
        $this->expectExceptionCode(10020);
        $this->expectExceptionMessage("Given value '$testInput' is negative and can not be accepted as a positive integer");
        $positiveInt = new PositiveInteger($testInput);
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}